package view;



import data.Filme;
import data.FilmeDao;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author diego
 */
public class CenaFlixMainFrame extends javax.swing.JFrame {
    
    public Filme filme;
    public FilmeDao conexao;
    
    
    

    /**
     * Creates new form CenaFlixMainFrame
     */
    public CenaFlixMainFrame() {
       
        initComponents();
        
        // LISTAGEM DE FILMES NA JTABLE
        FilmeDao dao = new FilmeDao();
        boolean status = dao.conectar();
        
        if(status){ 
         
        DefaultTableModel model = (DefaultTableModel)tabela.getModel();
        ArrayList<Filme> listaFilmes = new ArrayList<>();    
        listaFilmes = dao.listar(); 
        
        for(Filme f:listaFilmes){
       
            Object[] Obj = new Object[]{ 
                f.getIdFilme(),
                f.getNomeFilme(),
                f.getDataLancamento(),
                f.getCategoria(),
            };        
        model.addRow(Obj);
        }
    
        }else{
            System.out.println("Conexão não estabelecida");
        }  
        
        dao.desconectar();
    }
           
   
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        campoNomeFilme = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campoCategoria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        botaoSalvar = new javax.swing.JButton();
        botaoLimpar = new javax.swing.JButton();
        campoDataLancamento = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        botaoApagar = new javax.swing.JButton();
        botaoEditar = new javax.swing.JButton();
        campoPesquisa = new javax.swing.JTextField();
        botaoPesquisa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        campoNomeFilme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNomeFilmeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Data de lançamento:");

        campoCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCategoriaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 30)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Categoria:");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 30)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nome do filme:");

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Cadastro de filme");

        botaoSalvar.setBackground(new java.awt.Color(204, 204, 204));
        botaoSalvar.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        botaoSalvar.setText("Salvar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        botaoLimpar.setBackground(new java.awt.Color(204, 204, 204));
        botaoLimpar.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        botaoLimpar.setText("Limpar");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        try {
            campoDataLancamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        tabela.setBackground(new java.awt.Color(204, 204, 204));
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome do filme", "Data de lançamento", "Categoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabela);

        botaoApagar.setBackground(new java.awt.Color(204, 204, 204));
        botaoApagar.setText("Apagar");
        botaoApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoApagarActionPerformed(evt);
            }
        });

        botaoEditar.setBackground(new java.awt.Color(204, 204, 204));
        botaoEditar.setText("Editar");
        botaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarActionPerformed(evt);
            }
        });

        botaoPesquisa.setBackground(new java.awt.Color(204, 204, 204));
        botaoPesquisa.setText("Pesquisar");
        botaoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Dica: Filtro por categoria. Para mostrar tudo deixar em branco.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel6)
                        .addGap(102, 102, 102)
                        .addComponent(campoNomeFilme, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel2)
                        .addGap(35, 35, 35)
                        .addComponent(campoDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel5)
                        .addGap(167, 167, 167)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(campoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(campoPesquisa)
                                .addGap(18, 18, 18)
                                .addComponent(botaoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botaoEditar)
                                .addGap(18, 18, 18)
                                .addComponent(botaoApagar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel6))
                    .addComponent(campoNomeFilme, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel2))
                    .addComponent(campoDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel5))
                    .addComponent(campoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 650, 770));

        jPanel4.setBackground(new java.awt.Color(163, 29, 51));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("CenaFlix");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 21, 203, -1));

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 48)); // NOI18N
        jLabel8.setText("CenaFlix");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 203, -1));

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 90));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
    // BOTÃO QUE INSERE FILME NO BANCO E LISTA NA JTABLE APÓS INSERÇÃO
    
    String nomeFilme = campoNomeFilme.getText();
    String dataLancamento = campoDataLancamento.getText();
    String categoriaFilme = campoCategoria.getText();
    
    // ---------------------------- INSERÇÃO -----------------------
    
    if (campoNomeFilme.getText().isEmpty() || campoDataLancamento.getText().isEmpty() || campoCategoria.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, "Campo em branco");
    }else{   
        
        FilmeDao dao = new FilmeDao();
        boolean status = dao.conectar();
        
        if(status){
        
        Filme f = new Filme();
        
        f.setNomeFilme(nomeFilme);
        f.setDataLancamento(dataLancamento);
        f.setCategoria(categoriaFilme);
       
        dao.inserir(f);
        
        }else{
            System.out.println("Conexão não estabelecida");
        } 
       
        // ---------  LISTAGEM -----------

        if(status){
         
        DefaultTableModel model = (DefaultTableModel)tabela.getModel();
        model.getDataVector().removeAllElements(); 
        ArrayList<Filme> listaFilmes = new ArrayList<Filme>();    
        listaFilmes = dao.listar();
        
        for(Filme f:listaFilmes){
       
            Object[] Obj = new Object[]{
                f.getIdFilme(),
                f.getNomeFilme(),
                f.getDataLancamento(),
                f.getCategoria(),
            };        
        model.addRow(Obj);
        }
    
        }else{
            System.out.println("Conexão não estabelecida");
        }  
        
        dao.desconectar();
    
    JOptionPane.showMessageDialog(null, "Inserido com Sucesso!");
    campoNomeFilme.setText("");
    campoDataLancamento.setText("");
    campoCategoria.setText("");
    
    }
    
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
    // BOTÃO QUE LIMPA AS CAIXAS DE TEXTO
    campoNomeFilme.setText("");
    campoDataLancamento.setText("");
    campoCategoria.setText("");      
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void campoNomeFilmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNomeFilmeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNomeFilmeActionPerformed

    private void campoCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCategoriaActionPerformed

    private void botaoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarActionPerformed
        // EDITA UM CAMPO E ATUALIZA NO BD, LOGO APÓS LISTA NA JTABLE
        DefaultTableModel model = (DefaultTableModel)tabela.getModel();       
        int index = 0;
        index = tabela.getSelectedRow();
        
        
        if(index == -1){
            JOptionPane.showMessageDialog(null, "Nenhuma linha selecionada");
        }else{
            
            Filme ff = new Filme();
            FilmeDao dao = new FilmeDao();
            boolean status = dao.conectar();
            
            if(status){
           
            ff.setIdFilme(Integer.parseInt(model.getValueAt(index,0 ).toString()));
            ff.setNomeFilme((model.getValueAt(index,1 ).toString()));
            ff.setDataLancamento((model.getValueAt(index,2 ).toString()));
            ff.setCategoria((model.getValueAt(index,3 ).toString()));
            dao.atualizar(ff, ff.getIdFilme());
            
            }else{
                
            }
     
             // ---------  LISTAGEM -----------

        if(status){
     
        model.getDataVector().removeAllElements(); 
        ArrayList<Filme> listaFilmes = new ArrayList<Filme>();    
        listaFilmes = dao.listar();
        
        for(Filme f:listaFilmes){
       
            Object[] Obj = new Object[]{
                f.getIdFilme(),
                f.getNomeFilme(),
                f.getDataLancamento(),
                f.getCategoria(),
            };        
        model.addRow(Obj);
        }
    
        }else{
            System.out.println("Conexão não estabelecida");
        }  
       
        dao.desconectar();
        JOptionPane.showMessageDialog(null, "Inserido com Sucesso!");
         tabela.isRowSelected(index);
        }
            
        
    }//GEN-LAST:event_botaoEditarActionPerformed

    private void botaoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisaActionPerformed
        // BOTÃO QUE PESQUISA A CATEGORIA ESPECIFICA APLICANDO DIFERENTES FILTROS
    
        // ---------------------------- Filtro -----------------------
    
        if (campoPesquisa.getText().isEmpty()){
            
            FilmeDao dao = new FilmeDao();
            boolean status = dao.conectar();
         
            if(status){
         
            DefaultTableModel model = (DefaultTableModel)tabela.getModel();
            model.getDataVector().removeAllElements(); 
            ArrayList<Filme> listaFilmes = new ArrayList<Filme>();    
            listaFilmes = dao.listaTudoFiltro();
        
            for(Filme f:listaFilmes){
       
                Object[] Obj = new Object[]{
                f.getIdFilme(),
                f.getNomeFilme(),
                f.getDataLancamento(),
                f.getCategoria(),
                };        
            model.addRow(Obj);
            }
    
            }else{
                System.out.println("Conexão não estabelecida");
            }  
        
            dao.desconectar();
       
        }else{
            
            FilmeDao dao = new FilmeDao();
            boolean status = dao.conectar();
         
            if(status){
         
            DefaultTableModel model = (DefaultTableModel)tabela.getModel();
            model.getDataVector().removeAllElements(); 
            ArrayList<Filme> listaFilmes = new ArrayList<>();
            listaFilmes = dao.listaFiltro(campoPesquisa.getText());
            
            if(listaFilmes.isEmpty()){
                JOptionPane.showMessageDialog(null, "Nenhum resultado com esse nome");
            }else{
             
                for(Filme f:listaFilmes){
       
                    Object[] Obj = new Object[]{
                    f.getIdFilme(),
                    f.getNomeFilme(),
                    f.getDataLancamento(),
                    f.getCategoria(),
                    };        
                    model.addRow(Obj);
                    }
                }
            
            }else{
                System.out.println("Conexão não estabelecida");
            }  
        
            dao.desconectar();
        }
                    
        
        
        
        
        
    }//GEN-LAST:event_botaoPesquisaActionPerformed

    private void botaoApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoApagarActionPerformed
        // BOTÃO USADO PARA APAGAR UMA LINHA DA TABELA COM LISTAGEM NA JTABLE TAMBÉM
        DefaultTableModel model = (DefaultTableModel)tabela.getModel();       
        int index = tabela.getSelectedRow();

        if(index == -1){
            JOptionPane.showMessageDialog(null, "Nenhuma linha selecionada");
        }else{        
            Filme ff = new Filme();
            FilmeDao dao = new FilmeDao();
            boolean status = dao.conectar();
            
            if(status){
           
            ff.setIdFilme(Integer.parseInt(model.getValueAt(index,0 ).toString()));
                System.out.println(ff.getIdFilme());
            dao.deletaLinha(ff.getIdFilme());           
            }   
            
            // ---------  LISTAGEM -----------

        if(status){
     
        model.getDataVector().removeAllElements(); 
        ArrayList<Filme> listaFilmes = new ArrayList<Filme>();    
        listaFilmes = dao.listar();
        
        for(Filme f:listaFilmes){
       
            Object[] Obj = new Object[]{
                f.getIdFilme(),
                f.getNomeFilme(),
                f.getDataLancamento(),
                f.getCategoria(),
            };        
        model.addRow(Obj);
        }
    
        }else{
            System.out.println("Conexão não estabelecida");
        }  
        
        dao.desconectar();
        JOptionPane.showMessageDialog(null, "Linha deletada!");
        
        }
    }//GEN-LAST:event_botaoApagarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CenaFlixMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CenaFlixMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CenaFlixMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CenaFlixMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CenaFlixMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoApagar;
    private javax.swing.JButton botaoEditar;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoPesquisa;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JTextField campoCategoria;
    private javax.swing.JFormattedTextField campoDataLancamento;
    private javax.swing.JTextField campoNomeFilme;
    private javax.swing.JTextField campoPesquisa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
